[{"path":"https://alejandrohagan.github.io/md/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 md authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alejandrohagan.github.io/md/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alejandro Hagan. Author, maintainer.","code":""},{"path":"https://alejandrohagan.github.io/md/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hagan (2025). md: Motherduck Utilities. R package version 0.1.0, https://alejandrohagan.github.io/md/.","code":"@Manual{,   title = {md: Motherduck Utilities},   author = {Alejandro Hagan},   year = {2025},   note = {R package version 0.1.0},   url = {https://alejandrohagan.github.io/md/}, }"},{"path":[]},{"path":"https://alejandrohagan.github.io/md/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Motherduck Utilities","text":"collection utilities help management, administration navigation duckdb database either locally computer cloud via motherduck Database management incredibly easy R fantastic packages DBI dbplyr, however databases specific extensions utilities aren’t readily accessible via packages {md} pack simplifies common database administration task easy understand syntax. {md} built upon DBI returns lazy DBI object can fully integrate data dbplyr","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"future-ambition","dir":"","previous_headings":"","what":"Future ambition","title":"Motherduck Utilities","text":"Eventually, ’ll use learning package create meta DB utilities package regardless ’re snowflake, DuckDB, Redshift, etc generalized functions work across database types much work progress – ’ll eventually transition R7 object system just want get usage first deciding architecture structure. Please create issue comments requests reach feedback.","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"overview-of-functions","dir":"","previous_headings":"","what":"Overview of functions","title":"Motherduck Utilities","text":"quick overview functions available package.","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"functions-that-help-you-manage-your-connection-and-duckdb-specific-extensions","dir":"","previous_headings":"Overview of functions","what":"Functions that help you manage your connection and duckdb specific extensions","title":"Motherduck Utilities","text":"connect_to_motherduck() leverage motherduck token connect motherduck instance (install motherduck extension already present) install_extensions() install various duckdb extensions official repository load_extensions() load duckdb extensions either official repository validate_md_connection_statu() validate motherduck connection status validate_extension_install_status() validate extension successfully installed validate_extension_load_status() validate extension successfully loaded","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"functions-that-help-you-see-what-is-in-your-databases","dir":"","previous_headings":"Overview of functions","what":"Functions that help you see what is in your databases","title":"Motherduck Utilities","text":"pwd() prints current database “” cd() change “root” database execution functions relative database (eg. CREATE SCHEMA) list_database() list databases metadata list_schema()list schemas metadata list_table()list tables metadata list_all_table()list tables across databases list_view()list views metadata","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"functions-that-will-help-you-read-data-into-duckdb-or-motherduck","dir":"","previous_headings":"Overview of functions","what":"Functions that will help you read data into duckdb or motherduck","title":"Motherduck Utilities","text":"read_httpfs() read httpfs file formats read_parquet() read parquet file formats read_excel() read excel files formats","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"functions-that-will-help-you-create-or-replace-databases-scehems-tables-or-views","dir":"","previous_headings":"Overview of functions","what":"Functions that will help you create or replace databases, scehems, tables or views","title":"Motherduck Utilities","text":"create_or_replace_database() take R data create database data create_or_replace_schemas() take R data create schema data create_or_replace_view() take R data create views data create_or_replace_table() take R data create tables data drop_table() delete table databases drop_database() delete database","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"functions-to-help-you-manage-motherduck-users-tokens-and-instance-settings","dir":"","previous_headings":"","what":"Functions to help you manage motherduck users, tokens, and instance settings","title":"Motherduck Utilities","text":"list_md_active_accounts() list users active duckling instances (note: list inactive users) list_md_user_instance() list user’s instance settings list_md_user_tokens() list user’s tokens show_current_user() show current user name create_md_user() create user service account organization delete_md_user() delete user service account create_md_access_token() create access token user delete_md_access_token() delete access token user configure_md_user_settings() configure user’s instance settings","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"functions-to-help-you-understand-your-data","dir":"","previous_headings":"Functions to help you manage motherduck users, tokens, and instance settings","what":"Functions to help you understand your data","title":"Motherduck Utilities","text":"summary() summarize table view’s data","code":""},{"path":"https://alejandrohagan.github.io/md/index.html","id":"what-do-i-need-to-use-this","dir":"","previous_headings":"","what":"What do I need to use this?","title":"Motherduck Utilities","text":"duckdb R package installed computer motherduck account motherduck access token can saved R environment file usethis::edit_r_environ() [!NOTE] Duckdb database can deploy run either temporary permanently computer. run via local computer, available computer Motherduck cloud based deployment duckdb means can save data cloud access locally core functions package work motherduck duckdb database question want data access locally computer want able access remotely via cloud","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/index.html","id":"create-a-duckdb-instance-and-connect-to-your-motherduck-account","dir":"","previous_headings":"Lets see the package in action","what":"Create a duckdb instance and Connect to your motherduck account","title":"Motherduck Utilities","text":"creating duckdb database, three options -memory based instance exists local computer file based instance exists local computer cloud-based instance motherduck create options 1 2 can simply use either duckdb duckplyr packages. use option 3, need create motherudck account generate access token. created, save access token R enviorment usethis::edit_r_environ(). recommend using MOTHERDUCK_TOKEN variable name. completed, can simply use connect_to_motherduck() function pass token variable name optional configuration options. return connection print statement indicating connection status. time can validate connection status validate_md_connection_status() [!NOTE] Go motherduck create account, free options available Go user name top right, click settings click access tokens Click create token name token copy token code need token access account want access via R simplest way save access code variable r environment Simply leverage usethis function edit_r_environ() set access code variable save – one time activity check correctly saved variable can use Sys.getenv(“var_name”) “var_name” named assigned access token Going forward, want access token don’t need re-type access token, simply remember variable name First need motherduck account, free paid tiers ’ve created account, simply, go settings click ‘Access Tokens’ ‘Integrations’ Keep secure safe lets connect online database read write data Open R use usethis::edit_r_environ() function put motherduck token variable enviornment profile MOTHERDUCK_TOKEN=‘tokenID’ can use connect_to_motherduck(\"MOTHERDUCK_TOKEN\") use DBI library create connection mother duck instance connecting motherduck number configuration options available, can reference via md::db_config pull list options default values change , simply edit configuration options want pass list argument connect_to_motherduck() duckdb() connecting locally can see full list duckdb configuration options alternatively can use list_settings() see current configuration options. time can see configuration arguments connection md::list_settings(). Congratulations, ’ve set connected motherduck database R! ’re new databases, helpful basic understanding database management - don’t worry basics straight forward won’t overwhelm , list resources found helpful. Posit solutions guide working databases dbplyr package page Motherduck guide duckdb documentation guide Please see {md} package website see additional documentation use functions motherduck","code":"con_md <- connect_to_motherduck(\"MOTHERDUCK_TOKEN\") ── Extension Load & Install Report ─────────────────────────────────────────────  Installed and loaded 1 extension: motherduck  Use `list_extensions()` to list extensions, status and their descriptions  Use `install_extensions()` to install new duckdb extensions  See <https://duckdb.org/docs/stable/extensions/overview.html> for more information  ── Connection Status Report: ──  ✔ You are connected to MotherDuck validate_md_connection_status(con_md) ── Connection Status Report: ──  ✔ You are connected to MotherDuck config <- md::db_config # <1> get list of default configuration options   config$allow_community_extensions <- \"true\" # <2> change a default option  con_md <- connect_to_motherduck(\"MOTHERDUCK_TOKEN\",config = config) # <3> pass the modified list to your connection list_setting(con_md)"},{"path":"https://alejandrohagan.github.io/md/reference/alter_table_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Tables from One Schema to Another — alter_table_schema","title":"Move Tables from One Schema to Another — alter_table_schema","text":"Moves one tables existing schema new (target) schema using `ALTER TABLE ... SET SCHEMA`. target schema exist, created first.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/alter_table_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Tables from One Schema to Another — alter_table_schema","text":"","code":"alter_table_schema(.con, from_table_names, new_schema)"},{"path":"https://alejandrohagan.github.io/md/reference/alter_table_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Tables from One Schema to Another — alter_table_schema","text":".con `DBI` connection (DuckDB / MotherDuck). new_schema Target schema name (tables moved). old_schema Previous schema name (tables currently live). table_names Character vector table names move.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/alter_table_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move Tables from One Schema to Another — alter_table_schema","text":"Invisibly returns character vector fully-qualified table names moved. Side effects: creates `new_schema` needed alters table schemas.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/alter_table_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Move Tables from One Schema to Another — alter_table_schema","text":"- Ensures `new_schema` exists (`CREATE SCHEMA EXISTS`). - table `table_names`, runs:   `ALTER TABLE old_schema.table SET SCHEMA new_schema`. - Table schema identifiers safely quoted `glue::glue_sql()`.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/cd.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Database — cd","title":"Change Database — cd","text":"Change Database","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Database — cd","text":"","code":"cd(.con, database, schema)"},{"path":"https://alejandrohagan.github.io/md/reference/cd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Database — cd","text":".con connection database database name","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Database — cd","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/check_resp_status_and_tidy_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Check resp status and tidy output to a tibble — check_resp_status_and_tidy_response","title":"Check resp status and tidy output to a tibble — check_resp_status_and_tidy_response","text":"Check resp status tidy output tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/check_resp_status_and_tidy_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check resp status and tidy output to a tibble — check_resp_status_and_tidy_response","text":"","code":"check_resp_status_and_tidy_response(   resp,   json_response,   column_name1,   column_name2 )"},{"path":"https://alejandrohagan.github.io/md/reference/check_resp_status_and_tidy_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check resp status and tidy output to a tibble — check_resp_status_and_tidy_response","text":"resp response code json_response response object column_name1 first column name response object column_name2 second column name response object","code":""},{"path":"https://alejandrohagan.github.io/md/reference/check_resp_status_and_tidy_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check resp status and tidy output to a tibble — check_resp_status_and_tidy_response","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_create_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Database, Schema, and Table Creator — cli_create_obj","title":"Database, Schema, and Table Creator — cli_create_obj","text":"function creates inserts data specified database, schema, table. database, schema, table provided, function attempts use current database, schema, table. first checks provided database, schema, table exists, either creates new one inserts existing one, based given parameters. generates action report indicating status operation, whether new database, schema, table created whether existing ones used.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_create_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database, Schema, and Table Creator — cli_create_obj","text":"","code":"cli_create_obj(.con, database_name, schema_name, table_name, write_type)"},{"path":"https://alejandrohagan.github.io/md/reference/cli_create_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database, Schema, and Table Creator — cli_create_obj","text":".con database connection object. connection database, schema, table information retrieved. database_name name database create insert . missing, current database used. schema_name name schema create insert . missing, current schema used. table_name name table create insert . missing, table-specific action taken. write_type Specifies type write operation. Used describe whether existing table updated (e.g., \"insert\" \"update\").","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_create_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Database, Schema, and Table Creator — cli_create_obj","text":"function return value. generates formatted report showing whether new database, schema,          table created existing ones used.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_delete_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"CLI print deleted objects — cli_delete_obj","title":"CLI print deleted objects — cli_delete_obj","text":"function allows delete specified objects (database, schema, table) connected database. function check provided database, schema, table exists. , proceed delete print action report detailing deleted many schemas tables affected. object exist, delete anything.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_delete_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CLI print deleted objects — cli_delete_obj","text":"","code":"cli_delete_obj(.con, database_name, schema_name, table_name)"},{"path":"https://alejandrohagan.github.io/md/reference/cli_delete_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CLI print deleted objects — cli_delete_obj","text":".con connection object database. database_name Name database deleted (optional). schema_name Name schema deleted (optional). table_name Name table deleted (optional).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_delete_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CLI print deleted objects — cli_delete_obj","text":"function return values. prints message indicating          deleted objects (database, schema, table) number schemas/tables          affected deletion.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Catalog Report Generator — cli_show_db","title":"Catalog Report Generator — cli_show_db","text":"function generates report provides details current database catalog, schema, number resources (catalogs, tables, shares) user access connected database. also offers helpful functions navigating catalog, schema, databases. report includes: - Current database (catalog) - Current schema - Number catalogs user access - Number tables user access - Number shares user access addition, function lists several useful functions like `cd`, `pwd`, `list_database`, etc., help manage explore database resources.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catalog Report Generator — cli_show_db","text":"","code":"cli_show_db(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Catalog Report Generator — cli_show_db","text":".con database connection object. connection catalog schema information retrieved.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Catalog Report Generator — cli_show_db","text":"function return value. generates formatted catalog report output, including          current database, schema, access counts catalogs, tables, shares.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_user.html","id":null,"dir":"Reference","previous_headings":"","what":"User Information Report — cli_show_user","title":"User Information Report — cli_show_user","text":"function generates report shows current user assigned role within database. queries database retrieve current user using `current_user()` current role using `current_role()`. output displayed clear formatted manner, user name role listed unordered list.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User Information Report — cli_show_user","text":"","code":"cli_show_user(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User Information Report — cli_show_user","text":".con database connection object. connection current user role information retrieved.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/cli_show_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User Information Report — cli_show_user","text":"function return value. generates formatted user report current user's          name role output.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/configure_md_user_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure motherduck user's settings — configure_md_user_settings","title":"Configure motherduck user's settings — configure_md_user_settings","text":"Configure motherduck user's settings","code":""},{"path":"https://alejandrohagan.github.io/md/reference/configure_md_user_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure motherduck user's settings — configure_md_user_settings","text":"","code":"configure_md_user_settings(   user_name,   motherduck_token = \"MOTHERDUCK_TOKEN\",   token_type = \"read_write\",   instance_size = \"pulse\",   flock_size = 0 )"},{"path":"https://alejandrohagan.github.io/md/reference/configure_md_user_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure motherduck user's settings — configure_md_user_settings","text":"user_name motherduck user name motherduck_token user's access token token_type token type instance_size instance size flock_size flock size","code":""},{"path":"https://alejandrohagan.github.io/md/reference/configure_md_user_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure motherduck user's settings — configure_md_user_settings","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/connect_to_motherduck.html","id":null,"dir":"Reference","previous_headings":"","what":"Create connection to motherduck — connect_to_motherduck","title":"Create connection to motherduck — connect_to_motherduck","text":"creates DuckDB connection, installs loads motherduck extension finally executes  `DBI::dbExecute(con, \"PRAGMA MD_CONNECT\")` connect motherduck motherduck token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/connect_to_motherduck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create connection to motherduck — connect_to_motherduck","text":"","code":"connect_to_motherduck(motherduck_token = \"MOTHERDUCK_TOKEN\", config)"},{"path":"https://alejandrohagan.github.io/md/reference/connect_to_motherduck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create connection to motherduck — connect_to_motherduck","text":"motherduck_token motherduck token saved environment file","code":""},{"path":"https://alejandrohagan.github.io/md/reference/connect_to_motherduck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create connection to motherduck — connect_to_motherduck","text":"connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/convert_table_to_sql_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Table Metadata to SQL Identifiers — convert_table_to_sql_id","title":"Convert Table Metadata to SQL Identifiers — convert_table_to_sql_id","text":"Converts tibble table metadata (`table_catalog`, `table_schema`, `table_name`) list `DBI::Id` SQL identifiers. Useful safely quoting fully qualified table references `DBI`/`dbplyr` workflows.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/convert_table_to_sql_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Table Metadata to SQL Identifiers — convert_table_to_sql_id","text":"","code":"convert_table_to_sql_id(x)"},{"path":"https://alejandrohagan.github.io/md/reference/convert_table_to_sql_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Table Metadata to SQL Identifiers — convert_table_to_sql_id","text":"x tibble data frame containing columns: * `table_catalog` — database/catalog name * `table_schema` — schema name * `table_name` — table name","code":""},{"path":"https://alejandrohagan.github.io/md/reference/convert_table_to_sql_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Table Metadata to SQL Identifiers — convert_table_to_sql_id","text":"list `DBI::Id` objects, representing fully-qualified table.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/convert_to_seconds.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert units to seconds — convert_to_seconds","title":"Convert units to seconds — convert_to_seconds","text":"Convert units seconds","code":""},{"path":"https://alejandrohagan.github.io/md/reference/convert_to_seconds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert units to seconds — convert_to_seconds","text":"","code":"convert_to_seconds(number, units)"},{"path":"https://alejandrohagan.github.io/md/reference/convert_to_seconds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert units to seconds — convert_to_seconds","text":"number numeriv value units second, minute, day, month, year never","code":""},{"path":"https://alejandrohagan.github.io/md/reference/convert_to_seconds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert units to seconds — convert_to_seconds","text":"number","code":""},{"path":"https://alejandrohagan.github.io/md/reference/convert_to_seconds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert units to seconds — convert_to_seconds","text":"","code":"convert_to_seconds(300,\"days\") #> Error in convert_to_seconds(300, \"days\"): could not find function \"convert_to_seconds\""},{"path":"https://alejandrohagan.github.io/md/reference/copy_tables_to_new_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Tables to a New Database/Schema — copy_tables_to_new_location","title":"Copy Tables to a New Database/Schema — copy_tables_to_new_location","text":"Copies one tables new location (database/schema) creating new tables via `CREATE TABLE ... SELECT * ...`. connected MotherDuck, target database created missing, target schema created missing connection.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/copy_tables_to_new_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Tables to a New Database/Schema — copy_tables_to_new_location","text":"","code":"copy_tables_to_new_location(   .con,   from_table_names,   to_database_name,   to_schema_name )"},{"path":"https://alejandrohagan.github.io/md/reference/copy_tables_to_new_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Tables to a New Database/Schema — copy_tables_to_new_location","text":".con `DBI` connection (DuckDB / MotherDuck). from_table_names tibble/data frame listing source tables, columns `database_name`, `schema_name`, `table_name`. to_database_name Target database name. to_schema_name Target schema name.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/copy_tables_to_new_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Tables to a New Database/Schema — copy_tables_to_new_location","text":"Invisibly returns character vector fully-qualified destination table names created. Side effect: creates target DB/schema needed writes new tables.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/copy_tables_to_new_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy Tables to a New Database/Schema — copy_tables_to_new_location","text":"- Input `from_table_names` must contain columns:   `database_name`, `schema_name`, `table_name`. - source table, function issues:   `CREATE TABLE <to_db>.<to_schema>.<table> SELECT * <src_db>.<src_schema>.<table>`. - local DuckDB (non-MotherDuck), target database name ignored   defaults current database connection.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","title":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","text":"Ensures database exists sets active database. connected MotherDuck, function run `CREATE DATABASE EXISTS` followed `USE <database>`. Prints CLI status information current user database.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","text":"","code":"create_if_not_exists_database(.con, database_name)"},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","text":".con valid `DBI` connection (DuckDB / MotherDuck). database_name Name database create/ensure switch .","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","text":"Invisibly returns `NULL`. Side effect: may create database switches ; prints CLI status.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_database.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","text":"- Connection type checked via `validate_md_connection_status()`   (`return_type = \"arg\"`). - MotherDuck, executes:   - `CREATE DATABASE EXISTS <database>`   - `USE <database>` - Displays status environment info CLI messages.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create (If Not Exists) and Switch to a Database — create_if_not_exists_database","text":"","code":"if (FALSE) { # \\dontrun{ con <- DBI::dbConnect(duckdb::duckdb()) create_if_not_exists_database(con, \"analytics\") } # }"},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a MD share of a database — create_if_not_exists_share","title":"Create a MD share of a database — create_if_not_exists_share","text":"Create MD share database","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a MD share of a database — create_if_not_exists_share","text":"","code":"create_if_not_exists_share(   .con,   share_name,   database_name,   access = \"PUBLIC\",   visibility = \"LISTED\",   update = \"AUTOMATIC\" )"},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a MD share of a database — create_if_not_exists_share","text":".con MD connection share_name new share name database_name target database access \"RESTRICTED\" \"PUBLIC\" visibility \"HIDDEN\" \"LISTED\" update \"AUTOMATIC\" \"MANUAL\"","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_if_not_exists_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a MD share of a database — create_if_not_exists_share","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_md_access_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a motherduck access token — create_md_access_token","title":"Create a motherduck access token — create_md_access_token","text":"Create motherduck access token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_md_access_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a motherduck access token — create_md_access_token","text":"","code":"create_md_access_token(   user_name,   token_type,   token_name,   token_expiration_number,   token_expiration_unit,   motherduck_token = \"MOTHERDUCK_TOKEN\" )"},{"path":"https://alejandrohagan.github.io/md/reference/create_md_access_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a motherduck access token — create_md_access_token","text":"user_name new users name token_type token type token_name token name token_expiration_number token expiration number - minimum 300 seconds token_expiration_unit token expiration unit (`seconds`,`minutes`,`days`,`weeks`,`months`,`years`,`never`) motherduck_token admin user's token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_md_access_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a motherduck access token — create_md_access_token","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_md_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new motherduck token — create_md_user","title":"Create a new motherduck token — create_md_user","text":"Create new motherduck token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_md_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new motherduck token — create_md_user","text":"","code":"create_md_user(user_name, motherduck_token = \"MOTHERDUCK_TOKEN\")"},{"path":"https://alejandrohagan.github.io/md/reference/create_md_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new motherduck token — create_md_user","text":"user_name new motherduck user name motherduck_token admin user's token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_md_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new motherduck token — create_md_user","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_or_replace_share.html","id":null,"dir":"Reference","previous_headings":"","what":"@title Create or replace a motherduck share — create_or_replace_share","title":"@title Create or replace a motherduck share — create_or_replace_share","text":"@title Create replace motherduck share","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_or_replace_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"@title Create or replace a motherduck share — create_or_replace_share","text":"","code":"create_or_replace_share(   .con,   share_name,   database_name,   access = \"PUBLIC\",   visibility = \"LISTED\",   update = \"AUTOMATIC\" )"},{"path":"https://alejandrohagan.github.io/md/reference/create_or_replace_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"@title Create or replace a motherduck share — create_or_replace_share","text":".con md connection share_name shame name database_name database name shared access either \"RESTRICTED\" \"PUBLIC\" visibility either \"HIDDEN\" \"LISTED\" update either \"AUTOMATIC\" \"MANUAL\"","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_or_replace_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"@title Create or replace a motherduck share — create_or_replace_share","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Schema in a Database if It Does Not Exist — create_schema","title":"Create a Schema in a Database if It Does Not Exist — create_schema","text":"Ensures specified schema exists given database. connection MotherDuck instance, function switches specified database creating schema. also prints helpful connection environment information via CLI messages transparency.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Schema in a Database if It Does Not Exist — create_schema","text":"","code":"create_schema(.con, database_name, schema_name)"},{"path":"https://alejandrohagan.github.io/md/reference/create_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Schema in a Database if It Does Not Exist — create_schema","text":".con valid `DBI` connection (e.g., DuckDB MotherDuck). database_name Name database create/use. schema_name Name schema create exist.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Schema in a Database if It Does Not Exist — create_schema","text":"Invisibly returns `NULL`. Side effect: creates schema necessary prints CLI messages.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Schema in a Database if It Does Not Exist — create_schema","text":"- Uses `DBI::dbExecute()` `CREATE SCHEMA EXISTS` create   schema needed. - connected MotherDuck (determined   `validate_md_connection_status()`), executes `USE <database>`   creating schema. - Displays connection/user/database information via internal CLI helpers.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/create_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or Append a Table from a Tibble or DBI-Backed Table — create_table","title":"Create or Append a Table from a Tibble or DBI-Backed Table — create_table","text":"thin wrapper routes either [`create_table_dbi()`] (`dbplyr`-backed lazy tables, class `\"tbl_dbi\"`) [`create_table_tbl()`] (-memory tibbles / data frames), creating physical table target database/schema. Supports **overwrite** **append** write strategies defers heavy lifting specific implementation.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or Append a Table from a Tibble or DBI-Backed Table — create_table","text":"","code":"create_table(   .data,   .con,   database_name,   schema_name,   table_name,   write_type = \"overwrite\" )"},{"path":"https://alejandrohagan.github.io/md/reference/create_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or Append a Table from a Tibble or DBI-Backed Table — create_table","text":".data Tibble/data frame (-memory) `dbplyr`/DBI-backed lazy table (class `\"tbl_dbi\"`). .con DuckDB MotherDuck `DBI` connection. database_name Database name create/use. schema_name Schema name create/use. table_name Target table name create append . write_type Write strategy: `\"overwrite\"` (drop/create) `\"append\"` (insert rows). Defaults `\"overwrite\"`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or Append a Table from a Tibble or DBI-Backed Table — create_table","text":"Invisibly returns `NULL`. Side effect: writes table database delegating appropriate helper.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create or Append a Table from a Tibble or DBI-Backed Table — create_table","text":"- `.data` `dbplyr` lazy table (class `\"tbl_dbi\"`), call   delegated [`create_table_dbi()`]. - `.data` -memory tibble/data frame (class including   `\"data.frame\"`), call delegated [`create_table_tbl()`]. - input classes trigger error.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/create_table_dbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Database Table from a DBI Object — create_table_dbi","title":"Create a Database Table from a DBI Object — create_table_dbi","text":"Creates physical table database `dbplyr`/`DBI`-backed lazy table query. function supports **overwrite** **append** write strategies, automatically creates target database schema exist, adds audit fields (`upload_date`, `upload_time`) written table.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table_dbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Database Table from a DBI Object — create_table_dbi","text":"","code":"create_table_dbi(   .data,   .con,   database_name,   schema_name,   table_name,   write_type = \"overwrite\" )"},{"path":"https://alejandrohagan.github.io/md/reference/create_table_dbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Database Table from a DBI Object — create_table_dbi","text":".data `dbplyr` lazy table DBI-compatible object materialized physical table. .con valid `DBI` connection. database_name Name database create/use. missing, current database connection used. schema_name Name schema create/use. missing, current schema connection used. table_name Name table create append . write_type Write strategy: either `\"overwrite\"` (drop/create) `\"append\"` (insert rows). Defaults `\"overwrite\"`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table_dbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Database Table from a DBI Object — create_table_dbi","text":"user-friendly message returned invisibly (invisible `NULL`), indicating whether table created appended . Side effect: writes data database.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table_dbi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Database Table from a DBI Object — create_table_dbi","text":"- connection MotherDuck connection (detected   `validate_md_connection_status()`), function ensures   database created switches creating schema. - Adds two audit columns: `upload_date` (date run)   `upload_time` (time timezone run). - Uses `DBI::Id()` explicitly target database/schema/table. - `write_type = \"overwrite\"` drop recreate table. - `write_type = \"append\"` insert rows existing table.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/create_table_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrite or Append a Local Tibble to a Database Table — create_table_tbl","title":"Overwrite or Append a Local Tibble to a Database Table — create_table_tbl","text":"Takes -memory tibble (data frame) writes database table using `DBI` connection. function supports **overwrite** **append** modes, automatically creates target database schema exist, adds audit fields (`upload_date`, `upload_time`) written table.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite or Append a Local Tibble to a Database Table — create_table_tbl","text":"","code":"create_table_tbl(   .data,   .con,   database_name,   schema_name,   table_name,   write_type = \"overwrite\" )"},{"path":"https://alejandrohagan.github.io/md/reference/create_table_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overwrite or Append a Local Tibble to a Database Table — create_table_tbl","text":".data tibble data frame written database. .con valid `DBI` connection (e.g., DuckDB MotherDuck). database_name Name database create/use. missing, current database connection used. schema_name Name schema create/use. missing, current schema connection used. table_name Name table create append . write_type Write strategy: either `\"overwrite\"` (drop/create) `\"append\"` (insert rows). Defaults `\"overwrite\"`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overwrite or Append a Local Tibble to a Database Table — create_table_tbl","text":"Invisibly returns `NULL`. Side effect: writes tibble specified database table.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/create_table_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Overwrite or Append a Local Tibble to a Database Table — create_table_tbl","text":"- connection MotherDuck connection (detected   `validate_md_connection_status()`), function ensures   database created switches creating schema. - Two audit columns added data writing:   `upload_date` (date run) `upload_time` (time timezone run). - Uses `DBI::Id()` explicitly target database/schema/table. - `write_type = \"overwrite\"` drop recreate table. - `write_type = \"append\"` insert rows existing table.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/delete_and_create_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop and Recreate a Schema in a MotherDuck / DuckDB Database — delete_and_create_schema","title":"Drop and Recreate a Schema in a MotherDuck / DuckDB Database — delete_and_create_schema","text":"Drops existing schema (exists) specified database creates new empty schema. connection MotherDuck instance, function switches given database first, drops recreates schema. Displays helpful CLI output current connection, user, database.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_and_create_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop and Recreate a Schema in a MotherDuck / DuckDB Database — delete_and_create_schema","text":"","code":"delete_and_create_schema(.con, database_name, schema_name)"},{"path":"https://alejandrohagan.github.io/md/reference/delete_and_create_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop and Recreate a Schema in a MotherDuck / DuckDB Database — delete_and_create_schema","text":".con DuckDB connection object used execute SQL queries. database_name name database schema dropped recreated. schema_name name schema drop recreate.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_and_create_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop and Recreate a Schema in a MotherDuck / DuckDB Database — delete_and_create_schema","text":"Invisibly returns `NULL`. Side effect: drops recreates schema prints CLI status messages.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_and_create_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop and Recreate a Schema in a MotherDuck / DuckDB Database — delete_and_create_schema","text":"- Executes `DROP SCHEMA EXISTS ... CASCADE` remove existing schema   contained objects. - Executes `CREATE SCHEMA EXISTS` recreate . - connected MotherDuck (detected   `validate_md_connection_status()`), performs `USE <database>` first. - Prints summary current connection schema creation status   using internal CLI helpers.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/delete_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a Database — delete_database","title":"Drop a Database — delete_database","text":"Drops database current DuckDB MotherDuck connection exists. Prints CLI status report performing operation.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a Database — delete_database","text":"","code":"delete_database(.con, database_name)"},{"path":"https://alejandrohagan.github.io/md/reference/delete_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a Database — delete_database","text":".con valid `DBI` connection (DuckDB / MotherDuck). database_name Name database drop.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop a Database — delete_database","text":"Invisibly returns `NULL`. Side effect: drops database prints CLI status messages.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_database.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop a Database — delete_database","text":"- Executes `DROP DATABASE EXISTS <database_name>` remove database. - Intended DuckDB MotherDuck connections. - Prints user, database action details using CLI helper functions.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_access_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete MD user's access token — delete_md_access_token","title":"Delete MD user's access token — delete_md_access_token","text":"Delete MD user's access token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_access_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete MD user's access token — delete_md_access_token","text":"","code":"delete_md_access_token(   user_name,   token_name,   motherduck_token = \"MOTHERDUCK_TOKEN\" )"},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_access_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete MD user's access token — delete_md_access_token","text":"user_name motherduck user name token_name motherduck token name motherduck_token admin user's token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_access_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete MD user's access token — delete_md_access_token","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a motherduck user — delete_md_user","title":"Delete a motherduck user — delete_md_user","text":"Delete motherduck user","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a motherduck user — delete_md_user","text":"","code":"delete_md_user(user_name, motherduck_token)"},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a motherduck user — delete_md_user","text":"user_name motherduck user name motherduck_token motherduck token environment variable","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_md_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a motherduck user — delete_md_user","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a Schema from a Database — delete_schema","title":"Drop a Schema from a Database — delete_schema","text":"Drops schema specified database. Optionally cascades deletion objects within schema. Prints helpful CLI information current connection action.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a Schema from a Database — delete_schema","text":"","code":"delete_schema(.con, database_name, schema_name, cascade = FALSE)"},{"path":"https://alejandrohagan.github.io/md/reference/delete_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a Schema from a Database — delete_schema","text":".con valid `DBI` connection (DuckDB / MotherDuck). database_name Name database containing schema. schema_name Name schema drop. cascade Logical; `TRUE` (default), use `CASCADE` drop dependent objects schema. `FALSE`, drop empty.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop a Schema from a Database — delete_schema","text":"Invisibly returns `NULL`. Side effect: drops schema (contained objects `cascade = TRUE`) prints CLI status.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop a Schema from a Database — delete_schema","text":"- Runs `DROP SCHEMA EXISTS <db>.<schema>` optional `CASCADE`. - Intended DuckDB MotherDuck connections. - Uses CLI helpers show current connection report deletion.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a Table — delete_table","title":"Drop a Table — delete_table","text":"Drops table specified database schema exists. Uses `DROP TABLE EXISTS` safety prints CLI status report.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a Table — delete_table","text":"","code":"delete_table(.con, database_name, schema_name, table_name, cascade = TRUE)"},{"path":"https://alejandrohagan.github.io/md/reference/delete_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a Table — delete_table","text":".con valid `DBI` connection (DuckDB / MotherDuck). database_name Name database containing table. schema_name Name schema containing table. table_name Name table drop. cascade Logical; `TRUE` (default), drop dependent objects well using `CASCADE`. `FALSE`, drop fail dependencies.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/delete_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop a Table — delete_table","text":"Invisibly returns `NULL`. Side effect: drops table prints CLI status messages.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/describe_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe share — describe_share","title":"Describe share — describe_share","text":"Describe share","code":""},{"path":"https://alejandrohagan.github.io/md/reference/describe_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe share — describe_share","text":"","code":"describe_share(.con, share_path)"},{"path":"https://alejandrohagan.github.io/md/reference/describe_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe share — describe_share","text":".con connection share_path shared path name","code":""},{"path":"https://alejandrohagan.github.io/md/reference/describe_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe share — describe_share","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/drop_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a MD share name — drop_share","title":"Drop a MD share name — drop_share","text":"Drop MD share name","code":""},{"path":"https://alejandrohagan.github.io/md/reference/drop_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a MD share name — drop_share","text":"","code":"drop_share(.con, share_name)"},{"path":"https://alejandrohagan.github.io/md/reference/drop_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a MD share name — drop_share","text":".con MD connection share_name Share name","code":""},{"path":"https://alejandrohagan.github.io/md/reference/drop_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop a MD share name — drop_share","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/install_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Install motherduck extensions — install_extensions","title":"Install motherduck extensions — install_extensions","text":"Installs loads valid DuckDB extensions","code":""},{"path":"https://alejandrohagan.github.io/md/reference/install_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install motherduck extensions — install_extensions","text":"","code":"install_extensions(.con, extension_names)"},{"path":"https://alejandrohagan.github.io/md/reference/install_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install motherduck extensions — install_extensions","text":".con duckdb connection extension_names DuckDB extension names silent_msg indicate want success / failure report installation loading","code":""},{"path":"https://alejandrohagan.github.io/md/reference/install_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install motherduck extensions — install_extensions","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/install_extensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install motherduck extensions — install_extensions","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) install_extensions(con,'motherduck',silent_msg=TRUE) #> Error in install_extensions(con, \"motherduck\", silent_msg = TRUE): unused argument (silent_msg = TRUE)"},{"path":"https://alejandrohagan.github.io/md/reference/list_all_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List All Tables Visible to the Connection — list_all_tables","title":"List All Tables Visible to the Connection — list_all_tables","text":"Returns lazy tibble tables visible current connection querying `information_schema.tables` (across catalogs/databases schemas).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_all_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List All Tables Visible to the Connection — list_all_tables","text":"","code":"list_all_tables(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_all_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List All Tables Visible to the Connection — list_all_tables","text":".con valid `DBI` connection (DuckDB / MotherDuck).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_all_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List All Tables Visible to the Connection — list_all_tables","text":"`dbplyr` lazy tibble columns: * `table_catalog` — database/catalog name * `table_schema`  — schema name * `table_name`    — table name","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_all_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List All Tables Visible to the Connection — list_all_tables","text":"result `dbplyr` lazy table (`tbl_dbi`). Use `collect()` bring results R local tibble.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/list_current_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List Tables in the Current Database and Schema — list_current_tables","title":"List Tables in the Current Database and Schema — list_current_tables","text":"Returns lazy tibble tables exist **current database** **current schema** active connection. Queries standard `information_schema.tables` view filters `current_database()` `current_schema()`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_current_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Tables in the Current Database and Schema — list_current_tables","text":"","code":"list_current_tables(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_current_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Tables in the Current Database and Schema — list_current_tables","text":".con valid `DBI` connection (DuckDB / MotherDuck).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_current_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Tables in the Current Database and Schema — list_current_tables","text":"`dbplyr` lazy tibble columns: * `table_catalog` — current database. * `table_schema`  — current schema. * `table_name`    — table name.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_current_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Tables in the Current Database and Schema — list_current_tables","text":"- function validates connection valid `validate_con()`. - Result `dbplyr` lazy table (`tbl_dbi`); call `collect()` bring   R.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/list_databases.html","id":null,"dir":"Reference","previous_headings":"","what":"List Databases Visible to the Connection — list_databases","title":"List Databases Visible to the Connection — list_databases","text":"Returns lazy tibble distinct database (catalog) names visible current connection, using `information_schema.tables`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_databases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Databases Visible to the Connection — list_databases","text":"","code":"list_databases(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_databases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Databases Visible to the Connection — list_databases","text":".con valid `DBI` connection (DuckDB / MotherDuck).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_databases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Databases Visible to the Connection — list_databases","text":"`dbplyr` lazy tibble one column: `table_catalog`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_databases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Databases Visible to the Connection — list_databases","text":"result `dbplyr` lazy table (`tbl_dbi`). Use `collect()` bring results R local tibble.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/list_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"List motherduck extensions, their description and status — list_extensions","title":"List motherduck extensions, their description and status — list_extensions","text":"Lists available DuckDB extensions, description, load / installed status ","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List motherduck extensions, their description and status — list_extensions","text":"","code":"list_extensions(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List motherduck extensions, their description and status — list_extensions","text":".con DuckDB connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List motherduck extensions, their description and status — list_extensions","text":"tbi","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_extensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List motherduck extensions, their description and status — list_extensions","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) list_extensions(con) #> # A tibble: 25 × 9 #>    extension_name loaded installed install_path description              aliases #>    <chr>          <lgl>  <lgl>     <chr>        <chr>                    <list>  #>  1 autocomplete   FALSE  FALSE     \"\"           Adds support for autoco… <chr>   #>  2 aws            FALSE  FALSE     \"\"           Provides features that … <chr>   #>  3 azure          FALSE  FALSE     \"\"           Adds a filesystem abstr… <chr>   #>  4 core_functions TRUE   TRUE      \"(BUILT-IN)\" Core function library    <chr>   #>  5 delta          FALSE  FALSE     \"\"           Adds support for Delta … <chr>   #>  6 ducklake       FALSE  FALSE     \"\"           Adds support for DuckLa… <chr>   #>  7 encodings      FALSE  FALSE     \"\"           All unicode encodings t… <chr>   #>  8 excel          FALSE  FALSE     \"\"           Adds support for Excel-… <chr>   #>  9 fts            FALSE  FALSE     \"\"           Adds support for Full-T… <chr>   #> 10 httpfs         FALSE  FALSE     \"\"           Adds support for readin… <chr>   #> # ℹ 15 more rows #> # ℹ 3 more variables: extension_version <chr>, install_mode <chr>, #> #   installed_from <chr>"},{"path":"https://alejandrohagan.github.io/md/reference/list_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"List Database Functions (DuckDB/MotherDuck) — list_fns","title":"List Database Functions (DuckDB/MotherDuck) — list_fns","text":"Returns lazy table listing available SQL functions current DuckDB/MotherDuck connection using `duckdb_functions()`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Database Functions (DuckDB/MotherDuck) — list_fns","text":"","code":"list_fns(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Database Functions (DuckDB/MotherDuck) — list_fns","text":".con valid `DBI` connection (DuckDB MotherDuck).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Database Functions (DuckDB/MotherDuck) — list_fns","text":"`dbplyr` lazy tibble (`tbl_dbi`) function metadata (e.g., `function_name`, `schema`, `is_aggregate`, `is_alias`, etc.).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_fns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Database Functions (DuckDB/MotherDuck) — list_fns","text":"wrapper validates connection queries `duckdb_functions()` enumerate function metadata. result `dbplyr` lazy tibble (`tbl_dbi`); call `collect()` materialize R.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/list_md_active_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"List active motherduck accounts — list_md_active_accounts","title":"List active motherduck accounts — list_md_active_accounts","text":"List active motherduck accounts","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_active_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List active motherduck accounts — list_md_active_accounts","text":"","code":"list_md_active_accounts(motherduck_token = \"MOTHERDUCK_TOKEN\")"},{"path":"https://alejandrohagan.github.io/md/reference/list_md_active_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List active motherduck accounts — list_md_active_accounts","text":"motherduck_token admin user's token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_active_accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List active motherduck accounts — list_md_active_accounts","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"List motherduck user's instance settings — list_md_user_instance","title":"List motherduck user's instance settings — list_md_user_instance","text":"List motherduck user's instance settings","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List motherduck user's instance settings — list_md_user_instance","text":"","code":"list_md_user_instance(user_name, motherduck_token = \"MOTHERDUCK_TOKEN\")"},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_instance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List motherduck user's instance settings — list_md_user_instance","text":"user_name mother duck user name motherduck_token admin's motherduck user's instance","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List motherduck user's instance settings — list_md_user_instance","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_tokens.html","id":null,"dir":"Reference","previous_headings":"","what":"List a motherduck user's tokens — list_md_user_tokens","title":"List a motherduck user's tokens — list_md_user_tokens","text":"List motherduck user's tokens","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_tokens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List a motherduck user's tokens — list_md_user_tokens","text":"","code":"list_md_user_tokens(user_name, motherduck_token = \"MOTHERDUCK_TOKEN\")"},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_tokens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List a motherduck user's tokens — list_md_user_tokens","text":"user_name motherduck user name motherduck_token motherduck token environment nick name .con duckdb connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_md_user_tokens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List a motherduck user's tokens — list_md_user_tokens","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_owned_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"List all owned shares — list_owned_shares","title":"List all owned shares — list_owned_shares","text":"List owned shares","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_owned_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all owned shares — list_owned_shares","text":"","code":"list_owned_shares(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_owned_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all owned shares — list_owned_shares","text":".con motherduck connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_owned_shares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all owned shares — list_owned_shares","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_schemas.html","id":null,"dir":"Reference","previous_headings":"","what":"List Schemas in the Current Database — list_schemas","title":"List Schemas in the Current Database — list_schemas","text":"Returns lazy tibble schemas **current database** connection. Queries `information_schema.schemata` filters current database (`catalog_name = current_database()`).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_schemas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Schemas in the Current Database — list_schemas","text":"","code":"list_schemas(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_schemas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Schemas in the Current Database — list_schemas","text":".con valid `DBI` connection (DuckDB / MotherDuck).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_schemas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Schemas in the Current Database — list_schemas","text":"`dbplyr` lazy tibble columns: * `catalog_name` — current database name. * `schema_name` — schema within database.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_schemas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Schemas in the Current Database — list_schemas","text":"- function assumes connection valid (checked   `validate_con()`). - Returns `dbplyr` lazy table; use `collect()` bring result R.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/list_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"List database settings — list_settings","title":"List database settings — list_settings","text":"List database settings","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List database settings — list_settings","text":"","code":"list_setting(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List database settings — list_settings","text":".con dubdb md connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List database settings — list_settings","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_shared_with_me_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"List all shares that are shared with you — list_shared_with_me_shares","title":"List all shares that are shared with you — list_shared_with_me_shares","text":"List shares shared ","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_shared_with_me_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all shares that are shared with you — list_shared_with_me_shares","text":"","code":"list_shared_with_me_shares(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_shared_with_me_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all shares that are shared with you — list_shared_with_me_shares","text":".con motherduck connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_shared_with_me_shares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all shares that are shared with you — list_shared_with_me_shares","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — list_shares","title":"Title — list_shares","text":"Title","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — list_shares","text":"","code":"list_shares(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/list_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — list_shares","text":".con connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/list_shares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — list_shares","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/load_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Loand (and install) motherduck extensions — load_extensions","title":"Loand (and install) motherduck extensions — load_extensions","text":"Installs loads valid DuckDB extensions","code":""},{"path":"https://alejandrohagan.github.io/md/reference/load_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loand (and install) motherduck extensions — load_extensions","text":"","code":"load_extensions(.con, extension_names)"},{"path":"https://alejandrohagan.github.io/md/reference/load_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loand (and install) motherduck extensions — load_extensions","text":".con duckdb connection extension_names DuckDB extension names silent_msg indicate want success / failure report installation loading","code":""},{"path":"https://alejandrohagan.github.io/md/reference/load_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loand (and install) motherduck extensions — load_extensions","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/load_extensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loand (and install) motherduck extensions — load_extensions","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) load_extensions(con,'motherduck') #>  #> ── Extension Load & Install Report ───────────────────────────────────────────── #> Installed and loaded 1 extension: motherduck #>  #> Use `list_extensions()` to list extensions, status and their descriptions #> Use `install_extensions()` to install new duckdb extensions #> See <https://duckdb.org/docs/stable/extensions/overview.html> for more #> information #>"},{"path":"https://alejandrohagan.github.io/md/reference/pwd.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current databases — pwd","title":"Print current databases — pwd","text":"Prints current database (adopts language linux)","code":""},{"path":"https://alejandrohagan.github.io/md/reference/pwd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current databases — pwd","text":"","code":"pwd(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/pwd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print current databases — pwd","text":".con","code":""},{"path":"https://alejandrohagan.github.io/md/reference/pwd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current databases — pwd","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/pwd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print current databases — pwd","text":"","code":"#' con <- DBI::dbConnect(duckdb::duckdb()) pwd(con) #> Error in validate_con(.con): Connection string is not valid, please try again"},{"path":"https://alejandrohagan.github.io/md/reference/read_excel_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an Excel file into a DuckDB/MotherDuck table — read_excel_duckdb","title":"Read an Excel file into a DuckDB/MotherDuck table — read_excel_duckdb","text":"Loads DuckDB **excel** extension creates table Excel file using `read_xlsx()` table function. destination fully qualified `<database>.<schema>.<table>`. options supply forwarded `read_xlsx()` (e.g., `sheet`, `header`, `all_varchar`, `ignore_errors`, `range`, `stop_at_empty`, `empty_as_varchar`).","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_excel_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an Excel file into a DuckDB/MotherDuck table — read_excel_duckdb","text":"","code":"read_excel_duckdb(   .con,   to_database_name,   to_schema_name,   to_table_name,   file_path,   header,   sheet,   all_varchar,   ignore_errors,   range,   stop_at_empty,   empty_as_varchar,   write_type )"},{"path":"https://alejandrohagan.github.io/md/reference/read_excel_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an Excel file into a DuckDB/MotherDuck table — read_excel_duckdb","text":".con valid `DBI` connection (DuckDB / MotherDuck). to_database_name Target database name to_schema_name Target schema name to_table_name Target table name create file_path Path Excel file (`.xlsx`) header Logical; `TRUE`, first row header sheet Character; sheet name index (character) read all_varchar Logical; coerce columns `VARCHAR` ignore_errors Logical; continue cell/row errors range Character; Excel range like `\"A1\"` `\"A1:C100\"` stop_at_empty Logical; stop first completely empty row empty_as_varchar Logical; treat empty columns `VARCHAR` write_type Logical, drop previous table replace new table","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_excel_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an Excel file into a DuckDB/MotherDuck table — read_excel_duckdb","text":"Invisibly returns `NULL`. Side effect: creates `<database>.<schema>.<table>` Excel data.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/read_httpfs.html","id":null,"dir":"Reference","previous_headings":"","what":"read httpfs files — read_httpfs","title":"read httpfs files — read_httpfs","text":"Enables reading httpfs files Enables reading httpfs files","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_httpfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read httpfs files — read_httpfs","text":"","code":"read_csv_auto(.con, file_path, ...)  read_httpfs(.con, file_path)"},{"path":"https://alejandrohagan.github.io/md/reference/read_httpfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read httpfs files — read_httpfs","text":".con DuckDB connection file_path httpfs files","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_httpfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read httpfs files — read_httpfs","text":"message message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_parquet.html","id":null,"dir":"Reference","previous_headings":"","what":"read httpfs files — read_parquet","title":"read httpfs files — read_parquet","text":"read httpfs files","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_parquet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read httpfs files — read_parquet","text":"","code":"read_parquet(.con, file_path)"},{"path":"https://alejandrohagan.github.io/md/reference/read_parquet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read httpfs files — read_parquet","text":".con connection file_path file path parquet files","code":""},{"path":"https://alejandrohagan.github.io/md/reference/read_parquet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read httpfs files — read_parquet","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/return_table_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Metadata for One or More Tables — return_table_attributes","title":"Retrieve Metadata for One or More Tables — return_table_attributes","text":"Returns catalog (database), schema, table information one tables visible connection querying `information_schema.tables`.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/return_table_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Metadata for One or More Tables — return_table_attributes","text":"","code":"return_table_attributes(.con, table_name)"},{"path":"https://alejandrohagan.github.io/md/reference/return_table_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Metadata for One or More Tables — return_table_attributes","text":".con valid `DBI` connection (DuckDB / MotherDuck). table_name Character vector one table names look .","code":""},{"path":"https://alejandrohagan.github.io/md/reference/return_table_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Metadata for One or More Tables — return_table_attributes","text":"local tibble (data frame) columns: * `table_catalog` — database/catalog name * `table_schema`  — schema name * `table_name`    — matching table names","code":""},{"path":"https://alejandrohagan.github.io/md/reference/return_table_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Metadata for One or More Tables — return_table_attributes","text":"- Accepts one table names returns associated   `table_catalog`, `table_schema`, `table_name` found. - Uses `information_schema.tables` look metadata.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/show_current_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Show current user — show_current_user","title":"Show current user — show_current_user","text":"Show current user","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_current_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show current user — show_current_user","text":"","code":"show_current_user(.con, motherduck_token = \"MOTHERDUCK_TOKEN\", return = \"msg\")"},{"path":"https://alejandrohagan.github.io/md/reference/show_current_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show current user — show_current_user","text":"motherduck_token motherduck token return msg arg","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_current_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show current user — show_current_user","text":"tibble print statement","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_duckdb_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Show DuckDB settings — show_duckdb_settings","title":"Show DuckDB settings — show_duckdb_settings","text":"Show DuckDB settings","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_duckdb_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show DuckDB settings — show_duckdb_settings","text":"","code":"show_duckdb_settings(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/show_duckdb_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show DuckDB settings — show_duckdb_settings","text":".con connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_duckdb_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show DuckDB settings — show_duckdb_settings","text":"tibble","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_duckdb_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show DuckDB settings — show_duckdb_settings","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) show_duckdb_settings(con) #> # A tibble: 130 × 6 #>    name                               value description input_type scope aliases #>    <chr>                              <chr> <chr>       <chr>      <chr> <list>  #>  1 access_mode                        auto… Access mod… VARCHAR    GLOB… <chr>   #>  2 allocator_background_threads       false Whether to… BOOLEAN    GLOB… <chr>   #>  3 allocator_bulk_deallocation_flush… 512.… If a bulk … VARCHAR    GLOB… <chr>   #>  4 allocator_flush_threshold          128.… Peak alloc… VARCHAR    GLOB… <chr>   #>  5 allow_community_extensions         true  Allow to l… BOOLEAN    GLOB… <chr>   #>  6 allow_extensions_metadata_mismatch false Allow to l… BOOLEAN    GLOB… <chr>   #>  7 allow_persistent_secrets           true  Allow the … BOOLEAN    GLOB… <chr>   #>  8 allow_unredacted_secrets           false Allow prin… BOOLEAN    GLOB… <chr>   #>  9 allow_unsigned_extensions          false Allow to l… BOOLEAN    GLOB… <chr>   #> 10 allowed_directories                []    List of di… VARCHAR[]  GLOB… <chr>   #> # ℹ 120 more rows"},{"path":"https://alejandrohagan.github.io/md/reference/show_motherduck_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Show your motherduck token — show_motherduck_token","title":"Show your motherduck token — show_motherduck_token","text":"Show motherduck token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_motherduck_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show your motherduck token — show_motherduck_token","text":"","code":"show_motherduck_token(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/show_motherduck_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show your motherduck token — show_motherduck_token","text":".con connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/show_motherduck_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show your motherduck token — show_motherduck_token","text":"message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/summary.tbl_lazy.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize for DBI objects — summary.tbl_lazy","title":"Summarize for DBI objects — summary.tbl_lazy","text":"Summarize DBI objects","code":""},{"path":"https://alejandrohagan.github.io/md/reference/summary.tbl_lazy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize for DBI objects — summary.tbl_lazy","text":"","code":"# S3 method for class 'tbl_lazy' summary(.data)"},{"path":"https://alejandrohagan.github.io/md/reference/summary.tbl_lazy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize for DBI objects — summary.tbl_lazy","text":".data dbi object","code":""},{"path":"https://alejandrohagan.github.io/md/reference/summary.tbl_lazy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize for DBI objects — summary.tbl_lazy","text":"DBI object","code":""},{"path":"https://alejandrohagan.github.io/md/reference/upload_database_to_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a Local Database to MotherDuck — upload_database_to_md","title":"Upload a Local Database to MotherDuck — upload_database_to_md","text":"Creates new database MotherDuck (exist) copies objects existing local database using `COPY DATABASE` command.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/upload_database_to_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a Local Database to MotherDuck — upload_database_to_md","text":"","code":"upload_database_to_md(.con, from_db_name, to_db_name)"},{"path":"https://alejandrohagan.github.io/md/reference/upload_database_to_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a Local Database to MotherDuck — upload_database_to_md","text":".con valid MotherDuck `DBI` connection. from_db_name local database name copy . to_db_name target MotherDuck database create/overwrite.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/upload_database_to_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a Local Database to MotherDuck — upload_database_to_md","text":"Invisibly returns `NULL`. Side effect: creates target database copies objects; prints CLI action report.","code":""},{"path":"https://alejandrohagan.github.io/md/reference/upload_database_to_md.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a Local Database to MotherDuck — upload_database_to_md","text":"- Runs `CREATE DATABASE <to_db_name>` target database exist. - runs `COPY DATABASE <from_db_name> <to_db_name>` copy   objects (tables, views, etc.) local database. - Prints CLI status report (connection, user, current DB) completion.","code":""},{"path":[]},{"path":"https://alejandrohagan.github.io/md/reference/upload_database_to_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a Local Database to MotherDuck — upload_database_to_md","text":"","code":"if (FALSE) { # \\dontrun{ con <- DBI::dbConnect(duckdb::duckdb()) upload_database_to_md(con, from_db_name = \"local_db\", to_db_name = \"analytics\") } # }"},{"path":"https://alejandrohagan.github.io/md/reference/validate_and_print_database_loction.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — validate_and_print_database_loction","title":"Title — validate_and_print_database_loction","text":"Title","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_and_print_database_loction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — validate_and_print_database_loction","text":"","code":"validate_and_print_database_loction(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/validate_and_print_database_loction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — validate_and_print_database_loction","text":".con duckdb connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_and_print_database_loction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — validate_and_print_database_loction","text":"print message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_con.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate connection is DuckDB — validate_con","title":"Validate connection is DuckDB — validate_con","text":"Validates connection object DuckDB connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate connection is DuckDB — validate_con","text":"","code":"validate_con(.con)"},{"path":"https://alejandrohagan.github.io/md/reference/validate_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate connection is DuckDB — validate_con","text":".con connection","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_con.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate connection is DuckDB — validate_con","text":"logical value error message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_con.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate connection is DuckDB — validate_con","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) validate_duckdb_con(con) #> Error in validate_duckdb_con(con): could not find function \"validate_duckdb_con\""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_install_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate that the Motherduck extension correctly loaded — validate_extension_install_status","title":"Validate that the Motherduck extension correctly loaded — validate_extension_install_status","text":"Validate Motherduck extension correctly loaded","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_install_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that the Motherduck extension correctly loaded — validate_extension_install_status","text":"","code":"validate_extension_install_status(.con, extension_names, return_type = \"msg\")"},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_install_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that the Motherduck extension correctly loaded — validate_extension_install_status","text":".con connection obj extension_names list extension names want validate return_type 'msg' 'ext'","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_install_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate that the Motherduck extension correctly loaded — validate_extension_install_status","text":"message extension names","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_install_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate that the Motherduck extension correctly loaded — validate_extension_install_status","text":"","code":"library(DBI) con <- dbConnect(duckdb::duckdb()) validate_extension_install_status(con,extension_names=c('excel','arrow'),return_type='ext') #> $success_ext #> character(0) #>  #> $fail_ext #> [1] \"excel\" #>"},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_load_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Motherduck extensions are correctly loaded — validate_extension_load_status","title":"Validate Motherduck extensions are correctly loaded — validate_extension_load_status","text":"Validate  Motherduck extensions correctly loaded","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_load_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Motherduck extensions are correctly loaded — validate_extension_load_status","text":"","code":"validate_extension_load_status(.con, extension_names, return_type = \"msg\")"},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_load_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Motherduck extensions are correctly loaded — validate_extension_load_status","text":".con connection obj extension_names list extension names want validate return_type 'msg' 'ext'","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_load_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Motherduck extensions are correctly loaded — validate_extension_load_status","text":"message extension names","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_extension_load_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Motherduck extensions are correctly loaded — validate_extension_load_status","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) validate_extension_load_status(con,extension_names=c('excel','arrow'),return_type='ext') #> $success_ext #> character(0) #>  #> $fail_ext #> [1] \"excel\" #>  #> $missing_ext #> [1] \"arrow\" #>"},{"path":"https://alejandrohagan.github.io/md/reference/validate_flock_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate flock size args — validate_flock_size","title":"Validate flock size args — validate_flock_size","text":"Validate flock size args","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_flock_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate flock size args — validate_flock_size","text":"","code":"validate_flock_size(flock_size)"},{"path":"https://alejandrohagan.github.io/md/reference/validate_flock_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate flock size args — validate_flock_size","text":"flock_size whole number 0-60","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_flock_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate flock size args — validate_flock_size","text":"integer","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_instance_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate instance size args — validate_instance_size","title":"Validate instance size args — validate_instance_size","text":"Validate instance size args","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_instance_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate instance size args — validate_instance_size","text":"","code":"validate_instance_size(instance_size)"},{"path":"https://alejandrohagan.github.io/md/reference/validate_instance_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate instance size args — validate_instance_size","text":"instance_size select either \"pulse\", \"standard\", \"jumbo\", \"mega\", \"giga\"","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_instance_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate instance size args — validate_instance_size","text":"character vector","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_md_connection_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Mother Duck Connection Status — validate_md_connection_status","title":"Validate Mother Duck Connection Status — validate_md_connection_status","text":"Validate Mother Duck Connection Status","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_md_connection_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Mother Duck Connection Status — validate_md_connection_status","text":"","code":"validate_md_connection_status(.con, return_type = \"msg\")"},{"path":"https://alejandrohagan.github.io/md/reference/validate_md_connection_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Mother Duck Connection Status — validate_md_connection_status","text":".con connection return_type return message logical value connection status","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_md_connection_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Mother Duck Connection Status — validate_md_connection_status","text":"confirmation warning message","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_md_connection_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Mother Duck Connection Status — validate_md_connection_status","text":"","code":"con <- DBI::dbConnect(duckdb::duckdb()) validate_md_connection_status(con) #>  #> ── Connection Status Report: ── #>  #> ! You are not connected to MotherDuck"},{"path":"https://alejandrohagan.github.io/md/reference/validate_motherduck_token_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate if motherduck token in environment file — validate_motherduck_token_env","title":"Validate if motherduck token in environment file — validate_motherduck_token_env","text":"Validate motherduck token environment file","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_motherduck_token_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate if motherduck token in environment file — validate_motherduck_token_env","text":"","code":"validate_motherduck_token_env(motherduck_token = \"MOTHERDUCK_TOKEN\")"},{"path":"https://alejandrohagan.github.io/md/reference/validate_motherduck_token_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate if motherduck token in environment file — validate_motherduck_token_env","text":"motherduck_token motherduck token","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_motherduck_token_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate if motherduck token in environment file — validate_motherduck_token_env","text":"character vector","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_token_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate MD token type args — validate_token_type","title":"Validate MD token type args — validate_token_type","text":"Validate MD token type args","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_token_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate MD token type args — validate_token_type","text":"","code":"validate_token_type(token_type)"},{"path":"https://alejandrohagan.github.io/md/reference/validate_token_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate MD token type args — validate_token_type","text":"token_type character vector either read_write read_scaling","code":""},{"path":"https://alejandrohagan.github.io/md/reference/validate_token_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate MD token type args — validate_token_type","text":"vector","code":""},{"path":"https://alejandrohagan.github.io/md/news/index.html","id":"md-010","dir":"Changelog","previous_headings":"","what":"md 0.1.0","title":"md 0.1.0","text":"Added NEWS.md file track changes package. Created APIs manage motherduck users, tokens accounts Created {pkgdown} website Vignettes major use cases completed","code":""}]
